Main class:
/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Main.java to edit this template
 */
package calenderrr;

import java.awt.Color;
import java.awt.GridLayout;
import java.time.LocalDate;
import javax.swing.JFrame;
import javax.swing.JPanel;


public class Calenderrr {

    
    public static void main(String[] args) {
     
     JFrame frame = new JFrame("Calender");
     frame.setSize(900,500);
     frame.setLocationRelativeTo(null);
     frame.getContentPane().setBackground(Color.white);
     
     JPanel mainPanel = new JPanel(new GridLayout(1,2,0,0));
     
        LocalDate date = LocalDate.now();
     
     mainPanel.add(new Calender(date.getYear(),date.getMonthValue(), date, mainPanel));
     mainPanel.add(new Events());
     
     
     frame.getContentPane().add(mainPanel);
     frame.setVisible(true);
     
     
    }
    
}




Calender class:
/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Class.java to edit this template
 */
package calenderrr;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Cursor;
import java.awt.Font;
import java.awt.GridLayout;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.time.LocalDate;
import java.time.Month;
import java.time.YearMonth;
import java.time.format.DateTimeFormatter;
import javax.swing.BorderFactory;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.border.Border;

/**
 *
 * @author tashd
 */
public class Calender extends JPanel {
 
    
    public Calender(int year, int month, LocalDate selectedDay, JPanel mainPanel){
        
        setLayout(new BorderLayout(30, 30));
        setBorder(BorderFactory.createEmptyBorder(40,20,30,20));
        setBackground(Color.WHITE);
        
        JPanel top = new JPanel(new BorderLayout(10,10));
        top.setBackground(null);
        
        JLabel date = new JLabel(LocalDate.of(year, month, 1).format(DateTimeFormatter.ofPattern("MMMM YYYY")));
        date.setHorizontalAlignment(JLabel.CENTER);

        date.setForeground(Color.decode("#0ecf78"));
        top.add(date,BorderLayout.CENTER);
        
        JLabel right = new JLabel(new ImageIcon(getClass().getResource("/calenderrr/pics/right.png")));
        right.setCursor(new Cursor(Cursor.HAND_CURSOR) {
        });
        
        right.addMouseListener(new MouseListener(){
            @Override
            public void mouseReleased(MouseEvent e) {}

            @Override
            public void mousePressed(MouseEvent e) {}

            @Override
            public void mouseExited(MouseEvent e) {}

            @Override
            public void mouseEntered(MouseEvent e) {}

            @Override
            public void mouseClicked(MouseEvent e) {
                mainPanel.removeAll();
                if(month !=12){
                    mainPanel.add(new Calender(year, month+1, selectedDay, mainPanel));
                }
                else{
                    mainPanel.add(new Calender(year+1,1, selectedDay, mainPanel));
                }
                mainPanel.add(new Events());
                mainPanel.revalidate();
            }
            
        });
        
        top.add(right,BorderLayout.EAST);
        
        JLabel left = new JLabel(new ImageIcon(getClass().getResource("/calenderrr/pics/left.png")));
        left.setCursor(new Cursor(Cursor.HAND_CURSOR) {
        });
        
        left.addMouseListener(new MouseListener(){
            @Override
            public void mouseReleased(MouseEvent e) {}

            @Override
            public void mousePressed(MouseEvent e) {}

            @Override
            public void mouseExited(MouseEvent e) {}

            @Override
            public void mouseEntered(MouseEvent e) {}

            @Override
            public void mouseClicked(MouseEvent e) {
                mainPanel.removeAll();
                if(month !=1){
                    mainPanel.add(new Calender(year, month-1, selectedDay, mainPanel));
                }
                else{
                    mainPanel.add(new Calender(year-1,12, selectedDay, mainPanel));
                }
                mainPanel.add(new Events());
                mainPanel.revalidate();
            }
            
        });
        
        top.add(left,BorderLayout.WEST);
        
        add(top, BorderLayout.NORTH);
        
        JPanel days = new JPanel(new GridLayout(7,7));
        days.setBackground(null);
        
        Color header = Color.decode("#00FFFF");
        days.add(new DayLabel("Sun",header, Color.WHITE, false));
        days.add(new DayLabel("Mon",header, Color.WHITE, false));
        days.add(new DayLabel("Tue",header, Color.WHITE, false));
        days.add(new DayLabel("Wed",header, Color.WHITE, false));
        days.add(new DayLabel("Thu",header, Color.WHITE, false));
        days.add(new DayLabel("Fri",header, Color.WHITE, false));
        days.add(new DayLabel("Sat",header, Color.WHITE, false));
        
        String[] weekDays = new String[] {"SUNDAY","MONDAY", "TUESDAY", "WEDNESDAY", "THURSDAY", "FRIDAY", "SATURDAY"};
       
        LocalDate firstDay = LocalDate.of(year, month, 1);
        
        int j = 0;
        while (!firstDay.getDayOfWeek().toString().equals(weekDays[j])) {            
            days.add(new DayLabel("",Color.decode("#f0f0f0"), Color.BLACK, false));
            j++;
        }
        
        int daysNum = YearMonth.of(year, month).lengthOfMonth();
        for (int i = 1; i <= daysNum; i++) {
            final int day = i;
                    
            DayLabel dayLabel;
            if (selectedDay.getYear() == year && selectedDay.getMonthValue()== month && selectedDay.getDayOfMonth() == i) {
                dayLabel = new DayLabel(i+"",Color.decode("#0ecf78"),Color.BLACK,true);
            }
            else if(i%5 == 0){
               dayLabel = new DayLabel(i+"",Color.decode("#00d1e8"),Color.BLACK,true); 
            }
            else{
                dayLabel = new DayLabel(i+"",Color.decode("#f0f0f0"),Color.BLACK,true);
            }
            
            dayLabel.addMouseListener(new MouseListener(){
            @Override
            public void mouseReleased(MouseEvent e) {}

            @Override
            public void mousePressed(MouseEvent e) {}

            @Override
            public void mouseExited(MouseEvent e) {}

            @Override
            public void mouseEntered(MouseEvent e) {}

            @Override
            public void mouseClicked(MouseEvent e) {
                mainPanel.removeAll();
                LocalDate selected = LocalDate.of(year, month, day);
                mainPanel.add(new Calender(year, month, selected, mainPanel));
                mainPanel.add(new Events());
                mainPanel.revalidate();
            }
            
        });

            
            days.add(dayLabel);
        }
        
        
        for (int i = 0; i < (42 - (j + daysNum)); i++) {
            days.add(new DayLabel("",Color.decode("#f0f0f0"),Color.BLACK,true));
        }
        
        add(days,BorderLayout.CENTER);
        
    }
    
}


Events class:
/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Class.java to edit this template
 */
package calenderrr;

import java.awt.Color;
import javax.swing.JPanel;

/**
 *
 * @author tashd
 */
public class Events extends JPanel {
    
    
    public Events(){
        setBackground(Color.LIGHT_GRAY);
    }
    
}




DayLabel class:
/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Class.java to edit this template
 */
package calenderrr;

import java.awt.Color;
import java.awt.Cursor;
import javax.swing.JLabel;

/**
 *
 * @author tashd
 */
public class DayLabel extends JLabel {
    
    public DayLabel(String text, Color background, Color foreground, boolean btn ){
            setText(text);
            setHorizontalAlignment(JLabel.CENTER);
            setOpaque(true);
            setBackground(background);
            setForeground(foreground);
            if(btn) setCursor(new Cursor(Cursor.HAND_CURSOR) {
            });
            
    }
    
}





Event class:
/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Class.java to edit this template
 */
package calenderrr;

public class Event {
    
}


